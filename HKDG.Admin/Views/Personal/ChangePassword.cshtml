
@{
    ViewBag.Title = HKDG.Resources.Label.UpdatePassword;
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="app">
    <form id="form" role="form" class="col-lg-4">
        <div class="form-group">
            <label for="Pwd"> @HKDG.Resources.Label.Password</label>

            <input type="password" name="Pwd" id="Pwd" class="form-control" v-model="m.Pwd" required />
        </div>

        <div class="form-group">
            <label for="NewPwd"> @HKDG.Resources.Label.NewPassword</label>
            <input type="password" name="NewPwd" id="NewPwd" class="form-control" v-model="m.NewPwd" required />
        </div>
        <div class="form-group">
            <label for="ConfirmPwd"> @HKDG.Resources.Label.ConfirmNewPassword</label>


            <input type="password" name="ConfirmPwd" id="ConfirmPwd" class="form-control" v-model="m.ConfirmPwd" required />

        </div>
        <div class="form-group">
            <div style="text-align:right">
                <input type="button" class="btn btn-primary" v-on:click="update" value="@HKDG.Resources.Action.Update" />
                <div class="btn btn-info" onclick="clowWin();"><i class="glyphicon glyphicon glyphicon-remove"></i> @HKDG.Resources.Action.CloseTab</div>
            </div>
        </div>
       
    </form>
</div>

@section scripts{
    <script src="~/Scripts/additional-methods.js"></script>
    <script type="text/javascript">
        var app = new Vue({
            el: "#app",
            data: {
                m: { Pwd: "", NewPwd: "", ConfirmPwd: "" }
            },
            methods: {
                update: function () {
                    var tp = window.top;
                    if (validator.form()) {
                        WS.AjaxP("post", "/adminapi/User/UpdatePassword", { Pwd: this.m.Pwd, NewPwd: this.m.ConfirmPwd }, function (result) {
                            alert(result.Message);
                            if (result.Succeeded) {
                                WS.AjaxP("get", "/account/LogOut", "", function () {
                                    tp.location.href = "/Default/index";
                                }, function () {
                                    tp.location.href = "/Default/index";
                                })
                            }
                        }, function () { });
                    }
                }
            }

        });


          var validator = $("#form").validate({
              ignore: "",
              submitHandler: function () {
                            app.update();
                        },
                        rules: {
                            Pwd: {
                                required: true//,
                               // maxlength: 8,
                              //  minlength:

                            },
                            NewPwd: {
                                required: true,
                                maxlength: 20,
                                minlength: 8,
                                passcheck: true
                            },
                            ConfirmPwd: {
                                equalTo: "#NewPwd"
                            }
                        },
              messages: {
                              Pwd:{
                                  required: '@HKDG.Resources.Message.RequiredField',
                                  maxlength: '@HKDG.Resources.Message.PwdMaxLength',
                                  minlength:'@HKDG.Resources.Message.PwdMinLength',
                              }, NewPwd:{
                                  required: '@HKDG.Resources.Message.RequiredField',
                                  maxlength: '@HKDG.Resources.Message.PwdMaxLength',
                                  minlength: '@HKDG.Resources.Message.PwdMinLength',
                                  passcheck:'@HKDG.Resources.Message.PasswordFormatError',
                              }, ConfirmPwd:{
                                  required: '@HKDG.Resources.Message.RequiredField',
                                  maxlength: '@HKDG.Resources.Message.PwdMaxLength',
                                  minlength: '@HKDG.Resources.Message.PwdMinLength',
                                  equalTo:'@HKDG.Resources.Message.ConfirmPwdNotEq',
                              }
                        }
                    });

    </script>
}
